{"version":3,"sources":["Components/Nav/Nav.jsx","Components/User/Login.jsx","Components/User/Register.jsx","Components/Games/GameCard.jsx","Components/Games/GameSearch.jsx","Components/User/UserCard.jsx","Components/User/UserSearch.jsx","Components/Games/GamePage.jsx","Components/User/Profile.jsx","Components/User/EditProfile.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Nav","props","profileElm","authState","isLogin","user","to","userName","name","style","height","position","background","transparent","title","className","Button","as","Link","variant","onClick","logout","Login","useState","login","setLogin","onChangeInput","target","value","useEffect","onSubmit","e","a","preventDefault","Axios","post","res","userLogin","data","token","Container","Form","Group","Label","Control","onChange","type","Register","setUser","GameCard","game","id","cover","first_release_date","imageSrc","coverID","image_id","Col","md","Card","Img","width","src","Body","Title","Text","Date","getFullYear","GameSearch","state","results","changeHandler","temp","setState","searchHandler","getGames","searchTerm","get","games","this","Row","map","i","key","Component","UserCard","profilePic","UserSearch","getUsers","axios","put","then","users","catch","err","GamePage","isLoaded","gameID","getGameInfo","match","params","franchise","game_modes","genres","involved_companies","platforms","summary","franchiseElm","gameModesElm","genresElm","publishersElm","developersElm","platformsElm","fontWeight","length","mode","genre","involved_company","developer","company","publisher","platfroms","platform","fontSize","Profile","FriendsList","getUserInfo","sendFriendRequest","recieverId","headers","localStorage","acceptFriendRequest","senderID","removeFriend","friendID","_id","email","nationality","aboutMe","languages","friendsElm","friend","isAccepted","role","pathname","EditProfile","edit","password","defaultValue","App","loginHandler","setItem","decodedToken","decode","removeItem","logoutHandler","refreshPage","forceUpdate","window","location","reload","path","render","component","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"qbAaaA,G,OAAM,SAACC,GAGlB,IAAIC,EAAa,KASjB,OAPID,EAAME,UAAUC,SAAWH,EAAME,UAAUE,OAC7CH,EACE,kBAAC,IAAD,CAAMI,GAAE,iBAAYL,EAAME,UAAUE,KAAKE,WACtCN,EAAMI,KAAKG,OAKhB,yBAAKC,MAAO,CAAEC,OAAQ,QAASC,SAAU,aACvC,kBAAC,SAAD,CACEF,MAAO,CACLG,WACE,+JAGJ,kBAAC,SAAD,CAAQC,aAAW,EAACC,MAAM,SACxB,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAMC,UAAU,IAAIT,GAAG,eAAvB,qBAGA,kBAAC,IAAD,CAAMS,UAAU,IAAIT,GAAG,eAAvB,uBAICJ,IAGL,kBAAC,SAAD,CAAQY,MAAM,YACZ,kBAAC,aAAD,KACIb,EAAME,UAAUC,QAYhB,kBAACY,EAAA,EAAD,CACEC,GAAIC,IACJZ,GAAG,SACHa,QAAQ,eACRC,QAASnB,EAAMoB,QAEd,IANH,SAOS,KAlBT,oCACG,IACD,kBAACL,EAAA,EAAD,CAAQC,GAAIC,IAAMZ,GAAG,SAASa,QAAQ,gBAAtC,QACQ,KAER,kBAACH,EAAA,EAAD,CAAQC,GAAIC,IAAMZ,GAAG,YAAYa,QAAQ,gBACtC,IADH,WAEW,KACD,OAelB,kBAAC,UAAD,U,2DCnEKG,EAAQ,SAACrB,GAAW,IAAD,EACJsB,mBAAS,IADL,mBACvBC,EADuB,KAChBC,EADgB,KAG1BC,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUnB,EAAoB,EAApBA,KAAMoB,EAAc,EAAdA,MACrCH,EAAS,eAAKD,EAAN,eAAchB,EAAOoB,MAG/BC,qBAAU,eAEV,IAAIC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACbD,EAAEE,iBADW,kBAIKC,IAAMC,KAAK,cAAeX,GAJ/B,OAIPY,EAJO,OAKXnC,EAAMoC,UAAUD,EAAIE,KAAKC,OALd,yGAAH,sDASZ,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,0CACA,kDACA,kBAACC,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,cACA,kBAACF,EAAA,EAAKG,QAAN,CAAcpC,KAAK,QAAQqC,SAAU,SAACd,GAAD,OAAOL,EAAcK,OAE5D,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,iBACA,kBAACF,EAAA,EAAKG,QAAN,CACEpC,KAAK,WACLsC,KAAK,WACLD,SAAU,SAACd,GAAD,OAAOL,EAAcK,OAGnC,kBAACf,EAAA,EAAD,CACEG,QAAQ,UACR2B,KAAK,SACL1B,QAAS,SAACW,GACRD,EAASC,KAJb,eClCKgB,EAAW,SAAC9C,GAAW,IAAD,EACTsB,mBAAS,IADA,mBAC1BlB,EAD0B,KACpB2C,EADoB,KAGjCnB,qBAAU,eAEV,IAAIH,EAAgB,SAAC,GAAiC,IAAD,IAA9BC,OAAUnB,EAAoB,EAApBA,KAAMoB,EAAc,EAAdA,MACrCoB,EAAQ,eAAK3C,EAAN,eAAaG,EAAOoB,MAGzBE,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACbD,EAAEE,iBADW,kBAIKC,IAAMC,KAAK,iBAAkB9B,GAJlC,OAIP+B,EAJO,OAMXnC,EAAMoC,UAAUD,EAAIE,KAAKC,OANd,yGAAH,sDAUZ,OACE,6BACE,kBAACC,EAAA,EAAD,KACE,6CACA,kBAACC,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,aACA,kBAACF,EAAA,EAAKG,QAAN,CAAcpC,KAAK,OAAOqC,SAAU,SAACd,GAAD,OAAOL,EAAcK,OAE3D,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,iBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcpC,KAAK,WAAWqC,SAAU,SAACd,GAAD,OAAOL,EAAcK,OAE/D,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,cACA,kBAACF,EAAA,EAAKG,QAAN,CAAcpC,KAAK,QAAQqC,SAAU,SAACd,GAAD,OAAOL,EAAcK,OAE5D,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,iBACA,kBAACF,EAAA,EAAKG,QAAN,CACEpC,KAAK,WACLsC,KAAK,WACLD,SAAU,SAACd,GAAD,OAAOL,EAAcK,OAInC,kBAAC,IAAD,CAAMzB,GAAG,UACP,kBAACU,EAAA,EAAD,CAAQG,QAAQ,UAAU2B,KAAK,SAAS1B,QAAS,SAACW,GAAD,OAAOD,EAASC,KAAjE,gB,2CC9CK,SAASkB,EAAShD,GAAQ,IAAD,EACQA,EAAMiD,KAA9CC,EADgC,EAChCA,GAAI3C,EAD4B,EAC5BA,KAAM4C,EADsB,EACtBA,MAAOC,EADe,EACfA,mBAcnBC,EAAW,GAGf,GAAIF,EAAO,CACT,IAAIG,EAAUH,EAAMI,SAEpBF,EAAQ,sDATJ,OASI,YAA0DC,EAA1D,QAGV,OACE,kBAACE,EAAA,EAAD,CAAKC,GAAI,EAAG3C,UAAU,OACpB,kBAAC4C,EAAA,EAAD,KAEE,kBAACA,EAAA,EAAKC,IAAN,CACEnD,MAAO,CAAEC,OAAQ,OAAQmD,MAAO,QAChC1C,QAAQ,MACR2C,IAAKR,IAEP,kBAACK,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYjD,UAAW,eACrB,kBAAC,IAAD,CAAMA,UAAU,IAAIT,GAAE,oBAAe6C,IAClC3C,IAIL,kBAACmD,EAAA,EAAKM,KAAN,CAAWlD,UAAW,eAAtB,IAAuC,IAAImD,KAAwB,IAAnBb,GAAyBc,cAAzE,Q,ICtCWC,E,4MACnBC,MAAQ,CACNC,QAAS,I,EAGXC,cAAgB,SAACxC,GACf,IAAIyC,EAAI,eAAQ,EAAKH,OAErBG,EAAKzC,EAAEJ,OAAOnB,MAAQuB,EAAEJ,OAAOC,MAE/B,EAAK6C,SAASD,I,EAehBE,cAAgB,WACd,EAAKC,SAAS,EAAKN,MAAL,a,gGAbDO,G,gGAEO1C,IAAM2C,IAAN,uBAA0BD,I,OAAxCE,E,OAEJC,KAAKN,SAAS,CACZH,QAASQ,EAAMxC,O,6LAUX,IACFgC,EAAYS,KAAKV,MAAjBC,QACN,OACE,6BACE,kBAAC9B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,qBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcpC,KAAK,aAAaqC,SAAUkC,KAAKR,gBAC/C,4BAAQnD,QAAS2D,KAAKL,eAAtB,YAIJ,kBAACM,EAAA,EAAD,KACGV,EAAQW,KAAI,SAAC/B,EAAMgC,GAClB,OAAO,kBAACjC,EAAD,CAAUkC,IAAKD,EAAGhC,KAAMA,a,GA1CHkC,aCFzB,SAASC,EAASpF,GAAQ,IAAD,EACDA,EAAMI,KAArCE,EADgC,EAChCA,SAAUC,EADsB,EACtBA,KADsB,EAChB8E,WAEtB,OACE,kBAAC7B,EAAA,EAAD,CAAKC,GAAI,EAAG3C,UAAU,OACpB,kBAAC4C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,KAAN,KACA,kBAACJ,EAAA,EAAKK,MAAN,CAAYjD,UAAW,eACnB,kBAAC,IAAD,CAAMA,UAAU,IAAIT,GAAE,iBAAYC,IAC/BC,O,ICPM+E,E,4MACnBlB,MAAQ,CACNC,QAAS,I,EAGXC,cAAgB,SAACxC,GACf,IAAIyC,EAAI,eAAQ,EAAKH,OAErBG,EAAKzC,EAAEJ,OAAOnB,MAAQuB,EAAEJ,OAAOC,MAE/B,EAAK6C,SAASD,I,EAgBhBE,cAAgB,WACd,EAAKc,SAAS,EAAKnB,MAAMO,a,gGAdZA,G,4EACba,IACGC,IAAI,eAAgB,CAAEd,WAAYA,IAClCe,MAAK,SAACvD,GACL,EAAKqC,SAAS,CACZH,QAASlC,EAAIE,KAAKsD,WAIrBC,OAAM,SAACC,O,iIAQV,OACE,6BACE,kBAACtD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,qBACA,kBAACF,EAAA,EAAKG,QAAN,CAAcpC,KAAK,aAAaqC,SAAUkC,KAAKR,gBAC/C,4BAAQnD,QAAS2D,KAAKL,eAAtB,YAIJ,kBAACM,EAAA,EAAD,KACGD,KAAKV,MAAMC,QAAQW,KAAI,SAAC5E,EAAM6E,GAC7B,OAAO,kBAACG,EAAD,CAAUF,IAAKD,EAAG7E,KAAMA,a,GA1CH+E,aCFnBW,E,4MACnB1B,MAAQ,CACNnB,KAAM,GACN8C,UAAU,G,mGAGMC,G,gGAEG/D,IAAM2C,IAAN,4BAA+BoB,I,OAA5C/C,E,OAEJ6B,KAAKN,SAAS,CACZvB,KAAMA,EAAKZ,KACX0D,UAAU,I,yMAOdjB,KAAKmB,YAAYnB,KAAK9E,MAAMkG,MAAMC,OAAOH,U,+BAGjC,IAAD,EACkBlB,KAAKV,MAAxB2B,EADC,EACDA,SAAU9C,EADT,EACSA,KAEdE,EASEF,EATFE,MACAiD,EAQEnD,EARFmD,UACA7F,EAOE0C,EAPF1C,KACA8F,EAMEpD,EANFoD,WACAC,EAKErD,EALFqD,OACAC,EAIEtD,EAJFsD,mBACAC,EAGEvD,EAHFuD,UACApD,EAEEH,EAFFG,mBACAqD,EACExD,EADFwD,QAcEpD,EAAW,GAGf,GAAIF,EAAO,CACT,IAAIG,EAAUH,EAAMI,SAEpBF,EAAQ,sDATJ,OASI,YAA0DC,EAA1D,QAGV,IAAIoD,EAAe,KACfC,EAAe,KACfC,EAAY,KACZC,EAAgB,KAChBC,EAAgB,KAChBC,EAAe,KA6EnB,OA5EIX,IACFM,EAAeN,EACb,kBAAC1C,EAAA,EAAKM,KAAN,KACE,0BAAMxD,MAAO,CAAEwG,WAAY,SAA3B,eAAwD,IACvDZ,EAAU7F,MAEX,MAGoB,qBAAf8F,IACTM,EACEN,EAAWY,OAAS,EAClB,kBAACvD,EAAA,EAAKM,KAAN,KACG,IACD,0BAAMxD,MAAO,CAAEwG,WAAY,SAA3B,iBACCX,EAAWrB,KAAI,SAACkC,EAAMjC,GACrB,OAAOiC,EAAI,KAAW,QAGxB,MAGc,qBAAXZ,IACTM,EACEN,EAAOW,OAAS,EACd,kBAACvD,EAAA,EAAKM,KAAN,KACG,IACD,0BAAMxD,MAAO,CAAEwG,WAAY,SAA3B,YACCV,EAAOtB,KAAI,SAACmC,EAAOlC,GAClB,OAAOkC,EAAK,KAAW,QAGzB,MAG0B,qBAAvBZ,IACTO,EACEP,EAAmBU,OAAS,EAC1B,kBAACvD,EAAA,EAAKM,KAAN,KACG,IACD,0BAAMxD,MAAO,CAAEwG,WAAY,SAA3B,gBACCT,EAAmBvB,KAAI,SAACoC,EAAkBnC,GACzC,GAAImC,EAAiBC,UACnB,OAAOD,EAAiBE,QAAjB,KAAmC,QAI9C,KAENT,EACEN,EAAmBU,OAAS,EAC1B,kBAACvD,EAAA,EAAKM,KAAN,KACG,IACD,0BAAMxD,MAAO,CAAEwG,WAAY,SAA3B,gBACCT,EAAmBvB,KAAI,SAACoC,EAAkBnC,GACzC,GAAImC,EAAiBG,UACnB,OAAOH,EAAiBE,QAAjB,KAAmC,QAI9C,MAGiB,qBAAdE,YACTT,EACEP,EAAUS,OAAS,EACjB,kBAACvD,EAAA,EAAKM,KAAN,KACG,IACD,0BAAMxD,MAAO,CAAEwG,WAAY,SAA3B,eACCR,EAAUxB,KAAI,SAACyC,EAAUxC,GACxB,OAAOwC,EAAQ,KAAW,QAG5B,MAIN,kBAACjE,EAAA,EAAD,CAAKC,GAAI,EAAG3C,UAAU,OACnBiF,EACC,kBAACrC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,IAAN,CACEnD,MAAO,CAAEC,OAAQ,OAAQmD,MAAO,QAChC1C,QAAQ,MACR2C,IAAKR,IAEP,kBAACK,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CACEjD,UAAW,cACXN,MAAO,CAAEwG,WAAY,OAAQU,SAAU,SAEtCnH,GAEH,kBAACmD,EAAA,EAAKM,KAAN,CACElD,UAAW,cACXN,MAAO,CAAEwG,WAAY,OAAQU,SAAU,SAFzC,IAII,IAAIzD,KAA0B,IAArBb,GAA2Bc,cAJxC,KAQCwC,EAEAC,EAEAC,EACAG,EACAD,EACAD,EAEAJ,EACC,kBAAC/C,EAAA,EAAKM,KAAN,KACE,0BAAMxD,MAAO,CAAEwG,WAAY,SAA3B,iBAA0D,IACzDP,GAED,OAGN,U,GAnL0BtB,aCEjBwC,E,4MACnBvD,MAAQ,CACNhE,KAAM,CACJwH,YAAa,IAEf1H,UAAW,EAAKF,MAAME,UAEtB6F,UAAU,G,EAGZ8B,Y,uCAAc,WAAOvH,GAAP,eAAAyB,EAAA,+EAGO,EAAK/B,MAAM6H,YAAYvH,GAH9B,QAGNF,EAHM,QAMR,EAAKoE,SAAS,CACZpE,KAAMA,EACN2F,UAAU,IAGZ,EAAKvB,SAAS,CACZpE,KAAM,CACJwH,YAAa,IAEf7B,UAAU,IAfJ,uG,wDAsBd+B,kBAAoB,SAACC,GACnBvC,IACGC,IACC,kBACA,CAAEsC,cACF,CACEC,QAAS,CACP,eAAgBC,aAAa3F,SAIlCoD,MAAK,SAACvD,OAENyD,OAAM,SAACC,Q,EAIZqC,oBAAsB,SAACC,GACrB3C,IACGC,IACC,qBACA,CAAE0C,YACF,CACEH,QAAS,CACP,eAAgBC,aAAa3F,SAIlCoD,MAAK,SAACvD,OAENyD,OAAM,SAACC,Q,EAIZuC,aAAe,SAACC,GACd7C,IACGC,IACC,qBACA,CAAE4C,YACF,CACEL,QAAS,CACP,eAAgBC,aAAa3F,SAIlCoD,MAAK,SAACvD,OAENyD,OAAM,SAACC,Q,kEAKVf,KAAK+C,YAAY/C,KAAK9E,MAAMkG,MAAMC,OAAO7F,Y,+BAiBjC,IAAD,SACkBwE,KAAKV,MAAxBhE,EADC,EACDA,KAAM2F,EADL,EACKA,SAGVuC,EASElI,EATFkI,IACA/H,EAQEH,EARFG,KACAD,EAOEF,EAPFE,SACAiI,EAMEnI,EANFmI,MACAlD,EAKEjF,EALFiF,WACAuC,EAIExH,EAJFwH,YACAY,EAGEpI,EAHFoI,YACAC,EAEErI,EAFFqI,QACAC,EACEtI,EADFsI,UAGEC,EAAa,KAgEjB,OA/DI5C,GACE6B,EAAYX,OAAS,IACvB0B,EAAaf,EAAY5C,KAAI,SAAC4D,EAAQ3D,GAEpC,OACE,oCACE,kBAACvB,EAAA,EAAKM,KAAN,CAAWkB,IAAKD,GAAI2D,EAAOP,SAAS9H,MAEnC,EAAKP,MAAME,UAAUC,SACtBmI,IAAQ,EAAKtI,MAAME,UAAUE,KAAKkI,IAChC,oCACGM,EAAOC,WACN,kBAAC9H,EAAA,EAAD,CACEI,QAAS,kBAAM,EAAKiH,aAAaQ,EAAOP,SAASC,MACjDpH,QAAQ,gBAEP,IAJH,iBAQA,oCACG,IACe,UAAf0H,EAAOE,KACN,oCACE,kBAAC/H,EAAA,EAAD,CACEI,QAAS,kBACP,EAAK+G,oBAAoBU,EAAOP,SAASC,MAE3CpH,QAAQ,gBAEP,IANH,iBAOiB,KAGjB,kBAACH,EAAA,EAAD,CACEI,QAAS,kBACP,EAAKiH,aAAaQ,EAAOP,SAASC,MAEpCpH,QAAQ,gBAEP,IANH,mBAWF,kBAACH,EAAA,EAAD,CACEI,QAAS,kBAAM,EAAKiH,aAAaQ,EAAOP,SAASC,MACjDpH,QAAQ,gBAEP,IAJH,kBAOC,MAIP,UAQZ,kBAACsC,EAAA,EAAD,CAAKC,GAAI,EAAG3C,UAAU,OACnBiF,EACC,kBAACrC,EAAA,EAAD,KAEE,kBAACA,EAAA,EAAKC,IAAN,CACEnD,MAAO,CAAEC,OAAQ,OAAQmD,MAAO,QAChC1C,QAAQ,MACR2C,IAAKwB,IAGP,kBAAC3B,EAAA,EAAKI,KAAN,KACGgB,KAAK9E,MAAME,UAAUC,SACtBmI,IAAQxD,KAAK9E,MAAME,UAAUE,KAAKkI,IAChC,kBAACvH,EAAA,EAAD,CACEG,QAAQ,eACRC,QAAS,kBAAM,EAAK2G,kBAAkBQ,KAErC,IAJH,aAKa,KAEX,KAAM,IACTxD,KAAK9E,MAAME,UAAUC,SACtBmI,IAAQxD,KAAK9E,MAAME,UAAUE,KAAKkI,IAChC,kBAACvH,EAAA,EAAD,CACEC,GAAIC,IACJZ,GAAI,CACF0I,SAAS,gBAAD,OAAkBzI,GAC1BF,KAAM0E,KAAKV,MAAMhE,MAEnBc,QAAQ,gBAEP,IARH,OASO,KAEL,KAAM,IACV,kBAACwC,EAAA,EAAKK,MAAN,CAAYjD,UAAW,eAAvB,SAA6CP,GAC7C,kBAACmD,EAAA,EAAKM,KAAN,kBAAsB1D,GACtB,kBAACoD,EAAA,EAAKM,KAAN,eAAmBuE,GACnB,kBAAC7E,EAAA,EAAKM,KAAN,qBAAyBwE,GACzB,kBAAC9E,EAAA,EAAKM,KAAN,mBAAuB0E,GACvB,kBAAChF,EAAA,EAAKM,KAAN,kBAAsByE,GA9BxB,gBAgCGE,IAGH,S,gDA1IsB3I,EAAOoE,GACrC,OAAIpE,EAAME,WAAakE,EAAMlE,UACpB,CACLA,UAAWF,EAAME,WAMd,S,GAjG0BiF,aCHhB6D,E,4MACnB5E,MAAQ,CACNhE,KAAM,GACN2F,UAAU,EACVkD,KAAM,CACJC,SAAU,K,EAGdzH,cAAgB,SAACK,GACf,IAAIyC,EAAI,eAAQ,EAAKH,OACrBG,EAAK0E,KAAKnH,EAAEJ,OAAOnB,MAAQuB,EAAEJ,OAAOC,MACpC,EAAK6C,SAASD,I,EAGhBsD,Y,uCAAc,WAAOvH,GAAP,eAAAyB,EAAA,+EAEO,EAAK/B,MAAM6H,YAAYvH,GAF9B,QAENF,EAFM,QAKR,EAAKoE,SAAS,CACZpE,KAAMA,EACN2F,UAAU,IAGZ,EAAKvB,SAAS,CACZpE,KAAM,GAEN2F,UAAU,IAbJ,uG,wDAmBdlE,SAAW,SAACC,GACVA,EAAEE,iBAEFwD,IACGC,IAAI,mBAAoB,EAAKrB,MAAM6E,KAAM,CACxCjB,QAAS,CACP,eAAgBC,aAAa3F,SAGhCoD,MAAK,SAACvD,OAGNyD,OAAM,SAACC,Q,mEAKVf,KAAK+C,YAAY/C,KAAK9E,MAAMkG,MAAMC,OAAO7F,Y,+BAEjC,IAAD,SACkBwE,KAAKV,MAAxBhE,EADC,EACDA,KAAM2F,EADL,EACKA,SAGVxF,GAQEH,EATFkI,IASElI,EARFG,MACAD,EAOEF,EAPFE,SACAiI,EAMEnI,EANFmI,MAGAC,GAGEpI,EALFiF,WAKEjF,EAJFwH,YAIExH,EAHFoI,aACAC,EAEErI,EAFFqI,QACAC,EACEtI,EADFsI,UAEF,OACE,6BACG3C,EACC,kBAACxD,EAAA,EAAD,KACE,oCACA,kBAACC,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,cACA,kBAACF,EAAA,EAAKG,QAAN,CACEwG,aAAc5I,EACdA,KAAK,OACLqC,SAAU,SAACd,GAAD,OAAO,EAAKL,cAAcK,OAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,kBACA,kBAACF,EAAA,EAAKG,QAAN,CACEwG,aAAc7I,EACdC,KAAK,WACLqC,SAAU,SAACd,GAAD,OAAO,EAAKL,cAAcK,OAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,eACA,kBAACF,EAAA,EAAKG,QAAN,CACEwG,aAAcZ,EACdhI,KAAK,QACLqC,SAAU,SAACd,GAAD,OAAO,EAAKL,cAAcK,OAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,kBACA,kBAACF,EAAA,EAAKG,QAAN,CACEpC,KAAK,WACLsC,KAAK,WACLsG,aAAc,GACdvG,SAAU,SAACd,GAAD,OAAO,EAAKL,cAAcK,OAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,qBACA,kBAACF,EAAA,EAAKG,QAAN,CACEwG,aAAcX,EACdjI,KAAK,cACLqC,SAAU,SAACd,GAAD,OAAO,EAAKL,cAAcK,OAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,kBACA,kBAACF,EAAA,EAAKG,QAAN,CACEwG,aAAcV,EACdlI,KAAK,UACLqC,SAAU,SAACd,GAAD,OAAO,EAAKL,cAAcK,OAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACD,EAAA,EAAKE,MAAN,mBACA,kBAACF,EAAA,EAAKG,QAAN,CACEwG,aAAcT,EACdnI,KAAK,YACLqC,SAAU,SAACd,GAAD,OAAO,EAAKL,cAAcK,OAGxC,kBAACf,EAAA,EAAD,CACEG,QAAQ,UACR2B,KAAK,SACL1B,QAAS,SAACW,GAAD,OAAO,EAAKD,SAASC,KAHhC,SAQA,U,GAvI6BqD,a,SCapBiE,E,4MACnBhF,MAAQ,CACNhE,KAAM,KACND,SAAS,G,EAUXkJ,aAAe,SAAC/G,GACd,EAAKF,UAAUE,I,EAGjBF,U,uCAAY,WAAOE,GAAP,iBAAAP,EAAA,yDACVkG,aAAaqB,QAAQ,QAAShH,KAC1BiH,EAAeC,iBAAOlH,IAFhB,0CAKW,EAAKuF,YAAY0B,EAAajJ,UALzC,OAKFF,EALE,OAON,EAAKoE,SAAS,CACZpE,KAAMA,EACND,SAAS,IATL,kDAYN,EAAKqE,SAAS,CACZpE,KAAM,KACND,SAAS,IAdL,gCAkBR8H,aAAawB,WAAW,SAlBhB,0D,wDAsBZC,cAAgB,SAAC5H,GACfA,EAAEE,iBACFiG,aAAawB,WAAW,SACxB,EAAKjF,SAAS,CACZpE,KAAM,KACND,SAAS,K,EAgBbwJ,YAAc,WACZ,EAAKC,cACLC,OAAOC,SAASC,QAAO,I,kEAtDnB9B,aAAa3F,OACfwC,KAAK1C,UAAU6F,aAAa3F,S,2EAuCdhC,G,kGAEE2B,IAAM2C,IAAN,4BACOtE,I,cADnB6B,E,gBAGaA,EAAIE,KAAKjC,K,cAAtBA,E,yBACGA,G,2DAEA,M,gJASD,IAAD,SAEiB0E,KAAKV,MAAvBhE,EAFC,EAEDA,KAAMD,EAFL,EAEKA,QAEZ,OACE,6BACE,kBAAC,EAAD,CACED,UAAW4E,KAAKV,MAChBjE,QAASA,EACTiC,UAAW0C,KAAK1C,UAChBhC,KAAMA,EACNgB,OAAQ0D,KAAK4E,gBAEf,kBAAC,IAAD,KAEE,kBAAC,IAAD,CACEM,KAAK,SACLC,OAAQ,kBACN,kBAAC,EAAD,CACE7H,UAAW,EAAKiH,aAChBM,YAAa,EAAKA,iBAIxB,kBAAC,IAAD,CACEK,KAAK,YACLC,OAAQ,kBACN,kBAAC,EAAD,CACE7H,UAAW,EAAKA,UAChBuH,YAAa,EAAKA,iBAIxB,kBAAC,IAAD,CAAOK,KAAK,cAAcE,UAAW/F,IACrC,kBAAC,IAAD,CAAO6F,KAAK,oBAAoBE,UAAWpE,IAC3C,kBAAC,IAAD,CAAOkE,KAAK,cAAcE,UAAW5E,IACrC,kBAAC,IAAD,CACE0E,KAAK,mBACLC,OAAQ,SAACjK,GAAD,OACN,kBAAC,EAAD,eACEE,UAAW,EAAKkE,MAChByD,YAAa,EAAKA,aACd7H,OAIV,kBAAC,IAAD,CACEgK,KAAK,yBACLC,OAAQ,SAACjK,GAAD,OACNG,GAAWH,EAAMkG,MAAMC,OAAO7F,WAAaF,EAAKE,SAC9C,kBAAC,EAAD,eAAauH,YAAa,EAAKA,aAAiB7H,IAEhD,kBAAC,EAAD,e,GArHiBmF,aCJbgF,QACW,cAA7BN,OAAOC,SAASM,UAEe,UAA7BP,OAAOC,SAASM,UAEhBP,OAAOC,SAASM,SAASlE,MACvB,2D,cCTNmE,IAASJ,OACP,kBAAC,IAAMK,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAAAkF,GACJA,EAAaC,gBAEdjF,OAAM,SAAAkF,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.65c53da2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Navbar, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Header,\r\n  Drawer,\r\n  Content,\r\n  Navigation,\r\n  Layout,\r\n  Textfield,\r\n} from \"react-mdl\";\r\nimport \"./Nav.css\";\r\n\r\nexport const Nav = (props) => {\r\n  // https://images.unsplash.com/photo-1499551660540-eaf0697882f5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2551&q=80\r\n\r\n  let profileElm = null;\r\n\r\n  if (props.authState.isLogin && props.authState.user) {\r\n    profileElm = (\r\n      <Link to={`/users/${props.authState.user.userName}`}>\r\n        {props.user.name}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <div style={{ height: \"350px\", position: \"relative\" }}>\r\n      <Layout\r\n        style={{\r\n          background:\r\n            \"url(https://images.unsplash.com/photo-1499551660540-eaf0697882f5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2551&q=80) center / cover\",\r\n        }}\r\n      >\r\n        <Header transparent title=\"LUDUS\">\r\n          <Navigation>\r\n            <Link className=\"a\" to=\"/gameSearch\">\r\n              Search for Games!\r\n            </Link>\r\n            <Link className=\"a\" to=\"/userSearch\">\r\n              Search for Friends!\r\n            </Link>\r\n\r\n            {profileElm}\r\n          </Navigation>\r\n        </Header>\r\n        <Drawer title=\"Join Us!\">\r\n          <Navigation>\r\n            {!props.authState.isLogin ? (\r\n              <>\r\n                {\" \"}\r\n                <Button as={Link} to=\"/login\" variant=\"outline-dark\">\r\n                  Login{\" \"}\r\n                </Button>\r\n                <Button as={Link} to=\"/Register\" variant=\"outline-dark\">\r\n                  {\" \"}\r\n                  Register{\" \"}\r\n                </Button>{\" \"}\r\n              </>\r\n            ) : (\r\n              <Button\r\n                as={Link}\r\n                to=\"/login\"\r\n                variant=\"outline-dark\"\r\n                onClick={props.logout}\r\n              >\r\n                {\" \"}\r\n                Logout{\" \"}\r\n              </Button>\r\n            )}\r\n          </Navigation>\r\n        </Drawer>\r\n        <Content />\r\n      </Layout>\r\n\r\n      {/* <Navbar bg=\"dark\" variant=\"dark\" className=\"my-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Navbar.Brand>Ludus</Navbar.Brand>\r\n                        <Nav.Link as={Link} to=\"/home\">Games</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/Allmovie\">Make Friends!</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/About\">About</Nav.Link>\r\n                    </Nav>\r\n                    <Nav>\r\n                    <Button as={Link} to=\"/login\" variant=\"outline-light\"> Login </Button>\r\n                    <Button as={Link} to=\"/Register\" variant=\"outline-light\"> Register </Button>\r\n                    </Nav>\r\n                </Navbar> */}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Form, Container, Row, Col, Button, Alert } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\n\r\nexport const Login = (props) => {\r\n  const [login, setLogin] = useState({});\r\n\r\n  let onChangeInput = ({ target: { name, value } }) => {\r\n    setLogin({ ...login, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {});\r\n\r\n  let onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await Axios.post(\"/user/login\", login);\r\n      props.userLogin(res.data.token);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Login Page</h1>\r\n        <h3>Hey do a form here</h3>\r\n        <Form.Group>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control name=\"email\" onChange={(e) => onChangeInput(e)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={(e) => onChangeInput(e)}\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={(e) => {\r\n            onSubmit(e);\r\n          }}\r\n        >\r\n          Sign in!\r\n        </Button>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Container, Row, Col, Button, Alert } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Register = (props) => {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {});\r\n\r\n  let onChangeInput = ({ target: { name, value } }) => {\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  let onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      let res = await Axios.post(\"/user/register\", user);\r\n\r\n      props.userLogin(res.data.token);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>Register page</h1>\r\n        <Form.Group>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control name=\"name\" onChange={(e) => onChangeInput(e)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control name=\"userName\" onChange={(e) => onChangeInput(e)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control name=\"email\" onChange={(e) => onChangeInput(e)} />\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={(e) => onChangeInput(e)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Link to=\"/login\">\r\n          <Button variant=\"primary\" type=\"submit\" onClick={(e) => onSubmit(e)}>\r\n            Register\r\n          </Button>\r\n        </Link>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Col, Card } from \"react-bootstrap\";\r\nimport { withRouter, NavLink, Link } from \"react-router-dom\";\r\n\r\nexport default function GameCard(props) {\r\n  let { id, name, cover, first_release_date } = props.game;\r\n  \r\n  let imageSize = {\r\n    cover_small: \"cover_small\",\r\n    screenshot_med: \"screenshot_med\",\r\n    cover_big: \"cover_big\",\r\n    logo_med: \"logo_med\",\r\n    screenshot_big: \"screenshot_big\",\r\n    screenshot_huge: \"screenshot_huge\",\r\n    thumb: \"thumb\",\r\n    micro: \"micro\",\r\n    HD: \"720p\",\r\n    FHD: \"1080p\",\r\n  };\r\n  let imageSrc = \"\";\r\n\r\n  //Show an image if the cover exists\r\n  if (cover) {\r\n    let coverID = cover.image_id;\r\n    let size = imageSize.HD;\r\n    imageSrc = `https://images.igdb.com/igdb/image/upload/t_${size}/${coverID}.jpg`;\r\n  }\r\n\r\n  return (\r\n    <Col md={3} className=\"m-1\">\r\n      <Card>\r\n        {/* <Image style={{ height: 150, width: 150 }} src={link} /> */}\r\n        <Card.Img\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n          variant=\"top\"\r\n          src={imageSrc}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title className={\"text-center\"}>\r\n            <Link className=\"a\" to={`/gamePage/${id}`}>\r\n              {name}\r\n            </Link>\r\n          </Card.Title>\r\n\r\n          <Card.Text className={\"text-center\"}>({new Date(first_release_date*1000).getFullYear()})</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport GameCard from \"./GameCard\";\r\nimport Axios from \"axios\";\r\n\r\nexport default class GameSearch extends Component {\r\n  state = {\r\n    results: [],\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    let temp = { ...this.state };\r\n\r\n    temp[e.target.name] = e.target.value;\r\n\r\n    this.setState(temp);\r\n  };\r\n\r\n  async getGames(searchTerm) {\r\n    try {\r\n      let games = await Axios.get(`/game/search/${searchTerm}`);\r\n\r\n      this.setState({\r\n        results: games.data,\r\n      });\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  searchHandler = () => {\r\n    this.getGames(this.state[\"searchTerm\"]);\r\n  };\r\n  render() {\r\n    let { results } = this.state;\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Form.Group>\r\n            <Form.Label>Search Games</Form.Label>\r\n            <Form.Control name=\"searchTerm\" onChange={this.changeHandler} />\r\n            <button onClick={this.searchHandler}>Search</button>\r\n          </Form.Group>\r\n        </Container>\r\n\r\n        <Row>\r\n          {results.map((game, i) => {\r\n            return <GameCard key={i} game={game} />;\r\n          })}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Col, Card, Button } from \"react-bootstrap\";\r\nimport { withRouter, NavLink, Link } from \"react-router-dom\";\r\n\r\nexport default function UserCard(props) {\r\n  let { userName, name, profilePic } = props.user;\r\n\r\n  return (\r\n    <Col md={3} className=\"m-2\">\r\n      <Card>\r\n        <Card.Body>\r\n        <Card.Title className={\"text-center\"}>\r\n            <Link className=\"a\" to={`/users/${userName}`}> \r\n              {name}\r\n            </Link>\r\n          </Card.Title>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport UserCard from \"./UserCard\";\r\n\r\nexport default class UserSearch extends Component {\r\n  state = {\r\n    results: [],\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    let temp = { ...this.state };\r\n\r\n    temp[e.target.name] = e.target.value;\r\n\r\n    this.setState(temp);\r\n  };\r\n\r\n  async getUsers(searchTerm) {\r\n    axios\r\n      .put(\"/user/search\", { searchTerm: searchTerm })\r\n      .then((res) => {\r\n        this.setState({\r\n          results: res.data.users,\r\n        });\r\n\r\n      })\r\n      .catch((err) => {\r\n      });\r\n  }\r\n\r\n  searchHandler = () => {\r\n    this.getUsers(this.state.searchTerm);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Form.Group>\r\n            <Form.Label>Search Users</Form.Label>\r\n            <Form.Control name=\"searchTerm\" onChange={this.changeHandler} />\r\n            <button onClick={this.searchHandler}>Search</button>\r\n          </Form.Group>\r\n        </Container>\r\n\r\n        <Row>\r\n          {this.state.results.map((user, i) => {\r\n            return <UserCard key={i} user={user} />;\r\n          })}\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Col, Card } from \"react-bootstrap\";\r\nimport Axios from \"axios\";\r\n\r\nexport default class GamePage extends Component {\r\n  state = {\r\n    game: {},\r\n    isLoaded: false,\r\n  };\r\n\r\n  async getGameInfo(gameID) {\r\n    try {\r\n      let game = await Axios.get(`/game/getGameInfo/${gameID}`);\r\n\r\n      this.setState({\r\n        game: game.data,\r\n        isLoaded: true,\r\n      });\r\n    } catch (error) {\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.getGameInfo(this.props.match.params.gameID);\r\n  }\r\n\r\n  render() {\r\n    let { isLoaded, game } = this.state;\r\n    let {\r\n      cover,\r\n      franchise,\r\n      name,\r\n      game_modes,\r\n      genres,\r\n      involved_companies,\r\n      platforms,\r\n      first_release_date,\r\n      summary,\r\n    } = game;\r\n    let imageSize = {\r\n      cover_small: \"cover_small\",\r\n      screenshot_med: \"screenshot_med\",\r\n      cover_big: \"cover_big\",\r\n      logo_med: \"logo_med\",\r\n      screenshot_big: \"screenshot_big\",\r\n      screenshot_huge: \"screenshot_huge\",\r\n      thumb: \"thumb\",\r\n      micro: \"micro\",\r\n      HD: \"720p\",\r\n      FHD: \"1080p\",\r\n    };\r\n    let imageSrc = \"\";\r\n\r\n    //Show an image if the cover exists\r\n    if (cover) {\r\n      let coverID = cover.image_id;\r\n      let size = imageSize.HD;\r\n      imageSrc = `https://images.igdb.com/igdb/image/upload/t_${size}/${coverID}.jpg`;\r\n    }\r\n\r\n    let franchiseElm = null;\r\n    let gameModesElm = null;\r\n    let genresElm = null;\r\n    let publishersElm = null;\r\n    let developersElm = null;\r\n    let platformsElm = null;\r\n    if (franchise) {\r\n      franchiseElm = franchise ? (\r\n        <Card.Text>\r\n          <span style={{ fontWeight: \"bold\" }}>Franchise: </span>{\" \"}\r\n          {franchise.name}\r\n        </Card.Text>\r\n      ) : null;\r\n    }\r\n\r\n    if (typeof game_modes !== \"undefined\") {\r\n      gameModesElm =\r\n        game_modes.length > 0 ? (\r\n          <Card.Text>\r\n            {\" \"}\r\n            <span style={{ fontWeight: \"bold\" }}> Game Modes: </span>\r\n            {game_modes.map((mode, i) => {\r\n              return mode[\"name\"] + \" \";\r\n            })}\r\n          </Card.Text>\r\n        ) : null;\r\n    }\r\n\r\n    if (typeof genres !== \"undefined\") {\r\n      genresElm =\r\n        genres.length > 0 ? (\r\n          <Card.Text>\r\n            {\" \"}\r\n            <span style={{ fontWeight: \"bold\" }}>Genres: </span>\r\n            {genres.map((genre, i) => {\r\n              return genre[\"name\"] + \" \";\r\n            })}\r\n          </Card.Text>\r\n        ) : null;\r\n    }\r\n\r\n    if (typeof involved_companies !== \"undefined\") {\r\n      developersElm =\r\n        involved_companies.length > 0 ? (\r\n          <Card.Text>\r\n            {\" \"}\r\n            <span style={{ fontWeight: \"bold\" }}>Developers: </span>\r\n            {involved_companies.map((involved_company, i) => {\r\n              if (involved_company.developer) {\r\n                return involved_company.company[\"name\"] + \" \";\r\n              }\r\n            })}\r\n          </Card.Text>\r\n        ) : null;\r\n\r\n      publishersElm =\r\n        involved_companies.length > 0 ? (\r\n          <Card.Text>\r\n            {\" \"}\r\n            <span style={{ fontWeight: \"bold\" }}>Publishers: </span>\r\n            {involved_companies.map((involved_company, i) => {\r\n              if (involved_company.publisher) {\r\n                return involved_company.company[\"name\"] + \" \";\r\n              }\r\n            })}\r\n          </Card.Text>\r\n        ) : null;\r\n    }\r\n\r\n    if (typeof platfroms !== \"undefined\") {\r\n      platformsElm =\r\n        platforms.length > 0 ? (\r\n          <Card.Text>\r\n            {\" \"}\r\n            <span style={{ fontWeight: \"bold\" }}>Platforms: </span>\r\n            {platforms.map((platform, i) => {\r\n              return platform[\"name\"] + \" \";\r\n            })}\r\n          </Card.Text>\r\n        ) : null;\r\n    }\r\n\r\n    return (\r\n      <Col md={3} className=\"m-1\">\r\n        {isLoaded ? (\r\n          <Card>\r\n            <Card.Img\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n              variant=\"top\"\r\n              src={imageSrc}\r\n            />\r\n            <Card.Body>\r\n              <Card.Title\r\n                className={\"text-center\"}\r\n                style={{ fontWeight: \"bold\", fontSize: \"24px\" }}\r\n              >\r\n                {name}\r\n              </Card.Title>\r\n              <Card.Text\r\n                className={\"text-center\"}\r\n                style={{ fontWeight: \"bold\", fontSize: \"20px\" }}\r\n              >\r\n                ({new Date(first_release_date * 1000).getFullYear()})\r\n              </Card.Text>\r\n\r\n              {/* Franchise */}\r\n              {franchiseElm}\r\n\r\n              {gameModesElm}\r\n\r\n              {genresElm}\r\n              {platformsElm}\r\n              {developersElm}\r\n              {publishersElm}\r\n              {/* Description */}\r\n              {summary ? (\r\n                <Card.Text>\r\n                  <span style={{ fontWeight: \"bold\" }}>Description: </span>{\" \"}\r\n                  {summary}\r\n                </Card.Text>\r\n              ) : null}\r\n            </Card.Body>\r\n          </Card>\r\n        ) : null}\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Col, Card, Button } from \"react-bootstrap\";\r\nimport { withRouter, NavLink, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Profile extends Component {\r\n  state = {\r\n    user: {\r\n      FriendsList: [],\r\n    },\r\n    authState: this.props.authState,\r\n\r\n    isLoaded: false,\r\n  };\r\n\r\n  getUserInfo = async (userName) => {\r\n\r\n    try {\r\n      let user = await this.props.getUserInfo(userName);\r\n\r\n      if (user) {\r\n        this.setState({\r\n          user: user,\r\n          isLoaded: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          user: {\r\n            FriendsList: [],\r\n          },\r\n          isLoaded: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n\r\n  sendFriendRequest = (recieverId) => {\r\n    axios\r\n      .put(\r\n        \"/user/addFriend\",\r\n        { recieverId },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n      })\r\n      .catch((err) => {\r\n      });\r\n  };\r\n\r\n  acceptFriendRequest = (senderID) => {\r\n    axios\r\n      .put(\r\n        \"/user/acceptFriend\",\r\n        { senderID },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n      })\r\n      .catch((err) => {\r\n      });\r\n  };\r\n\r\n  removeFriend = (friendID) => {\r\n    axios\r\n      .put(\r\n        \"/user/removeFriend\",\r\n        { friendID },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": localStorage.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n      })\r\n      .catch((err) => {\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserInfo(this.props.match.params.userName);\r\n  }\r\n\r\n  \r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.authState != state.authState) {\r\n      return {\r\n        authState: props.authState,\r\n      };\r\n    }\r\n\r\n   \r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  render() {\r\n    let { user, isLoaded } = this.state;\r\n\r\n    let {\r\n      _id,\r\n      name,\r\n      userName,\r\n      email,\r\n      profilePic,\r\n      FriendsList,\r\n      nationality,\r\n      aboutMe,\r\n      languages,\r\n    } = user;\r\n\r\n    let friendsElm = null;\r\n    if (isLoaded) {\r\n      if (FriendsList.length > 0) {\r\n        friendsElm = FriendsList.map((friend, i) => {\r\n          \r\n          return (\r\n            <>\r\n              <Card.Text key={i}>{friend.friendID.name}</Card.Text>\r\n\r\n              {this.props.authState.isLogin &&\r\n              _id === this.props.authState.user._id ? (\r\n                <>\r\n                  {friend.isAccepted ? (\r\n                    <Button\r\n                      onClick={() => this.removeFriend(friend.friendID._id)}\r\n                      variant=\"outline-dark\"\r\n                    >\r\n                      {\" \"}\r\n                      Remove Friend\r\n                    </Button>\r\n                  ) : (\r\n                    <>\r\n                      {\" \"}\r\n                      {friend.role == \"sender\" ? (\r\n                        <>\r\n                          <Button\r\n                            onClick={() =>\r\n                              this.acceptFriendRequest(friend.friendID._id)\r\n                            }\r\n                            variant=\"outline-dark\"\r\n                          >\r\n                            {\" \"}\r\n                            Accept Request{\" \"}\r\n                          </Button>\r\n\r\n                          <Button\r\n                            onClick={() =>\r\n                              this.removeFriend(friend.friendID._id)\r\n                            }\r\n                            variant=\"outline-dark\"\r\n                          >\r\n                            {\" \"}\r\n                            Reject Request\r\n                          </Button>\r\n                        </>\r\n                      ) : (\r\n                        <Button\r\n                          onClick={() => this.removeFriend(friend.friendID._id)}\r\n                          variant=\"outline-dark\"\r\n                        >\r\n                          {\" \"}\r\n                          Cancel Request\r\n                        </Button>\r\n                      )}{\" \"}\r\n                    </>\r\n                  )}\r\n                </>\r\n              ) : null}\r\n            </>\r\n          );\r\n        });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Col md={3} className=\"m-1\">\r\n        {isLoaded ? (\r\n          <Card>\r\n            {/* <Image style={{ height: 150, width: 150 }} src={link} /> */}\r\n            <Card.Img\r\n              style={{ height: \"100%\", width: \"100%\" }}\r\n              variant=\"top\"\r\n              src={profilePic}\r\n            />\r\n\r\n            <Card.Body>\r\n              {this.props.authState.isLogin &&\r\n              _id !== this.props.authState.user._id ? (\r\n                <Button\r\n                  variant=\"outline-dark\"\r\n                  onClick={() => this.sendFriendRequest(_id)}\r\n                >\r\n                  {\" \"}\r\n                  Add Friend{\" \"}\r\n                </Button>\r\n              ) : null}{\" \"}\r\n              {this.props.authState.isLogin &&\r\n              _id === this.props.authState.user._id ? (\r\n                <Button\r\n                  as={Link}\r\n                  to={{\r\n                    pathname: `/EditProfile/${userName}`,\r\n                    user: this.state.user,\r\n                  }}\r\n                  variant=\"outline-dark\"\r\n                >\r\n                  {\" \"}\r\n                  Edit{\" \"}\r\n                </Button>\r\n              ) : null}{\" \"}\r\n              <Card.Title className={\"text-center\"}>Name: {name}</Card.Title>\r\n              <Card.Text>Username: {userName}</Card.Text>\r\n              <Card.Text>Email: {email}</Card.Text>\r\n              <Card.Text>Nationality: {nationality}</Card.Text>\r\n              <Card.Text>Languages: {languages}</Card.Text>\r\n              <Card.Text>About me: {aboutMe}</Card.Text>\r\n              Friends List:\r\n              {friendsElm}\r\n            </Card.Body>\r\n          </Card>\r\n        ) : null}\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n","import { Form, Container, Row, Col, Button, Alert } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nexport default class EditProfile extends Component {\r\n  state = {\r\n    user: {},\r\n    isLoaded: false,\r\n    edit: {\r\n      password: \"\",\r\n    },\r\n  };\r\n  onChangeInput = (e) => {\r\n    let temp = { ...this.state };\r\n    temp.edit[e.target.name] = e.target.value;\r\n    this.setState(temp);\r\n  };\r\n  \r\n  getUserInfo = async (userName) => {\r\n    try {\r\n      let user = await this.props.getUserInfo(userName);\r\n\r\n      if (user) {\r\n        this.setState({\r\n          user: user,\r\n          isLoaded: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          user: {\r\n          },\r\n          isLoaded: false,\r\n        });\r\n      }\r\n    } catch (error) {\r\n    }\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .put(\"/user/updateUser\", this.state.edit, {\r\n        headers: {\r\n          \"x-auth-token\": localStorage.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n      })\r\n      .catch((err) => {\r\n        \r\n      });\r\n  };\r\n  componentWillMount() {\r\n    this.getUserInfo(this.props.match.params.userName);\r\n  }\r\n  render() {\r\n    let { user, isLoaded } = this.state;\r\n    let {\r\n      _id,\r\n      name,\r\n      userName,\r\n      email,\r\n      profilePic,\r\n      FriendsList,\r\n      nationality,\r\n      aboutMe,\r\n      languages,\r\n    } = user;\r\n    return (\r\n      <div>\r\n        {isLoaded ? (\r\n          <Container>\r\n            <h1>Edit</h1>\r\n            <Form.Group>\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control\r\n                defaultValue={name}\r\n                name=\"name\"\r\n                onChange={(e) => this.onChangeInput(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Username:</Form.Label>\r\n              <Form.Control\r\n                defaultValue={userName}\r\n                name=\"userName\"\r\n                onChange={(e) => this.onChangeInput(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Email:</Form.Label>\r\n              <Form.Control\r\n                defaultValue={email}\r\n                name=\"email\"\r\n                onChange={(e) => this.onChangeInput(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password:</Form.Label>\r\n              <Form.Control\r\n                name=\"password\"\r\n                type=\"password\"\r\n                defaultValue={\"\"}\r\n                onChange={(e) => this.onChangeInput(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Nationality:</Form.Label>\r\n              <Form.Control\r\n                defaultValue={nationality}\r\n                name=\"nationality\"\r\n                onChange={(e) => this.onChangeInput(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>About me:</Form.Label>\r\n              <Form.Control\r\n                defaultValue={aboutMe}\r\n                name=\"aboutMe\"\r\n                onChange={(e) => this.onChangeInput(e)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Languages:</Form.Label>\r\n              <Form.Control\r\n                defaultValue={languages}\r\n                name=\"languages\"\r\n                onChange={(e) => this.onChangeInput(e)}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={(e) => this.onSubmit(e)}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Container>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { Nav } from \"./Components/Nav/Nav\";\r\nimport { Login } from \"./Components/User/Login\";\r\nimport { Register } from \"./Components/User/Register\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport GameSearch from \"./Components/Games/GameSearch\";\r\nimport UserSearch from \"./Components/User/UserSearch\";\r\nimport GamePage from \"./Components/Games/GamePage\";\r\nimport Profile from \"./Components/User/Profile\";\r\nimport EditProfile from \"./Components/User/EditProfile\";\r\nimport { decode } from \"jsonwebtoken\";\r\nimport Axios from \"axios\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    user: null,\r\n    isLogin: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    if (localStorage.token) {\r\n      this.userLogin(localStorage.token);\r\n    }\r\n  }\r\n\r\n  loginHandler = (token) => {\r\n    this.userLogin(token);\r\n  };\r\n\r\n  userLogin = async (token) => {\r\n    localStorage.setItem(\"token\", token);\r\n    let decodedToken = decode(token);\r\n    if (decodedToken) {\r\n      try {\r\n        let user = await this.getUserInfo(decodedToken.userName);\r\n\r\n        this.setState({\r\n          user: user,\r\n          isLogin: true,\r\n        });\r\n      } catch (error) {\r\n        this.setState({\r\n          user: null,\r\n          isLogin: false,\r\n        });\r\n      }\r\n    } else {\r\n      localStorage.removeItem(\"token\");\r\n    }\r\n  };\r\n\r\n  logoutHandler = (e) => {\r\n    e.preventDefault();\r\n    localStorage.removeItem(\"token\");\r\n    this.setState({\r\n      user: null,\r\n      isLogin: false,\r\n    });\r\n  };\r\n\r\n  async getUserInfo(userName) {\r\n    try {\r\n      let res = await Axios.get(\r\n        `/user/showProfile/${userName}`\r\n      );\r\n      let user = await res.data.user;\r\n      return user;\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  refreshPage = () => {\r\n    this.forceUpdate();\r\n    window.location.reload(false);\r\n  };\r\n\r\n  render() {\r\n\r\n    let { user, isLogin } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Nav\r\n          authState={this.state}\r\n          isLogin={isLogin}\r\n          userLogin={this.userLogin}\r\n          user={user}\r\n          logout={this.logoutHandler}\r\n        />\r\n        <Switch>\r\n          {/* <Route /> */}\r\n          <Route\r\n            path=\"/login\"\r\n            render={() => (\r\n              <Login\r\n                userLogin={this.loginHandler}\r\n                refreshPage={this.refreshPage}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/register\"\r\n            render={() => (\r\n              <Register\r\n                userLogin={this.userLogin}\r\n                refreshPage={this.refreshPage}\r\n              />\r\n            )}\r\n          />\r\n          <Route path=\"/gameSearch\" component={GameSearch} />\r\n          <Route path=\"/gamePage/:gameID\" component={GamePage} />\r\n          <Route path=\"/userSearch\" component={UserSearch} />\r\n          <Route\r\n            path=\"/users/:userName\"\r\n            render={(props) => (\r\n              <Profile\r\n                authState={this.state}\r\n                getUserInfo={this.getUserInfo}\r\n                {...props}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/EditProfile/:userName\"\r\n            render={(props) =>\r\n              isLogin && props.match.params.userName === user.userName ? (\r\n                <EditProfile getUserInfo={this.getUserInfo} {...props} />\r\n              ) : (\r\n                <Login />\r\n              )\r\n            }\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}